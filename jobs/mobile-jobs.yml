- defaults:
    name: global
    test_parameters:
      - git:
          name: sha1
          description: |
            If specified, jenkins will use this git branch to build.
            If not, jenkins will pick a branch (between 'master' and 'staging')
            that seems most likely to be the one you want built.
            This is usually either the branch that has commits in it that jenkins hasn't 'seen' yet,
            or, if there are none of those, the most recently-built branch.
          type: branch
          branch-filter: '.*/merge'
          sort: 'descending'
          default: :origin/(master|develop)
    beta_parameters:
      - string:
          name: CRASHLYTICS_GROUP
          default: '{crashlytics-group-default}'
          description: Alias of Crashlytics group to receive beta build
    production_parameters:

- project:
    name: godtools-swift
    description-intro: Builds, tests, & deploys the New Godtools iOS App.
    email-recipients: michael.harrison@cru.org
    crashlytics-group-default: god-tools-ios
    developers:
        - michaelharro
        - ryancarlson
        - pablomarti
    jobs:
        - 'mobile-group'

- project:
    name: jesus-film-android
    description-intro: Builds, tests, & deploys the Jesus Film Android App.
    email-recipients: michael.harrison@cru.org
    developers:
      - michaelharro
      - frett
      - bleppard
    crashlytics-group-default: jesus-film-android-alpha
    beta_parameters:
        - choice:
            name: CRASHLYTICS_GROUP
            choices: 
                - jesus-film-android-alpha
                - jesus-film-android-beta
            description: Alias of Crashlytics group to receive beta build
    jobs:
      - 'mobile-group'

- project:
    name: jesus-film-ios
    description-intro: Builds, tests, & deploys the Jesus Film iOS App.
    email-recipients: michael.harrison@cru.org
    developers:
      - michaelharro
      - charliepixegon
      - mresimont
    crashlytics-group-default: jesus-film-ios-alpha
    test_parameters:
        - git:
            name: sha1
            description: |
                If specified, jenkins will use this git branch to build.
                If not, jenkins will pick a branch (between 'master' and 'staging')
                that seems most likely to be the one you want built.
                This is usually either the branch that has commits in it that jenkins hasn't 'seen' yet,
                or, if there are none of those, the most recently-built branch.
            type: branch
            branch-filter: '.*/merge'
            sort: 'descending'
            default: :origin/(master|develop)
        - string:
            name: ARCLIGHT_URL
            default: 'https://api.arclight.org'
            description: URL of arclight server for app to point at
    beta_parameters:
        - choice:
            name: CRASHLYTICS_GROUP
            choices: 
                - jesus-film-ios-alpha
                - jesus-film-ios-beta
            description: Alias of Crashlytics group to receive beta build
        - choice:
            name: ARCLIGHT_URL
            choices: 
                - https://api.arclight.org
                - https://preprod.arclight.org
                - http://qa.jfpmedia.com
            description: URL of arclight server for app to point at
        - choice:
            name: PARSE_URL
            choices: 
                - https://parse.arclight.org:1337/parse
                - https://parse.arclight.org:1338/parse
            description: URL of parse server for app to point at. Production = 1337. Test = 1338.
    production_parameters:
        - string:
            name: ARCLIGHT_URL
            default: 'https://api.arclight.org'
            description: Do not change!
    jobs:
      - 'mobile-group'




- job-group:
    name: 'mobile-group'
    jobs:
        - '{name}-tests'
        - '{name}-beta'
        - '{name}-production'

- job-template:
    name: '{name}-tests'
    node: mac
    logrotate:
      numToKeep: 1
    description: |
      {description-intro}

      Runs tests when pull requests are created. The results are reported on the PR.
    parameters: '{obj:test_parameters}'
    properties:
      - github:
          url: https://github.com/CruGlobal/{name}/
      - inject:
          properties-content:
              !include-raw: .env.mobile-jobs
    scm:
      - git:
          branches:
            - '$sha1'
          url: git@github.com:CruGlobal/{name}.git
          credentials-id: '66c3b5a3-0f7c-4e22-97b2-a78fb5a73658'
          refspec: '+refs/pull/*:refs/remotes/origin/pr/*'
          wipe-workspace: false
          skip-tag: true
          prune: true
          excluded-users:
            - cru-jenkins-mobile
            - cru-jenkins2
            - cru-jenkins
    triggers:
      - github-pull-request:
          admin-list: '{obj:developers}'
          white-list: '{obj:developers}'
          github-hooks: true
          cron: 'H/5 * * * *'
          status-context: 'Jenkins'
          status-add-test-results: 'true'
          triggered-status: 'Build has been triggered'
          started-status: 'Build has begun'
          success-status: 'Build success'
          failure-status: 'Build failed'
          error-status: 'Error during build'
    wrappers:
      - build-name:
          name: '$GIT_ORIGIN_BRANCH #$BUILD_NUMBER'
      - ssh-agent-credentials:
          users:
            - '66c3b5a3-0f7c-4e22-97b2-a78fb5a73658'
      - ansicolor:
          colormap: xterm
    builders:
      - shell:
          !include-raw: fastlane-modification-check.sh
      - shell: |
          bundle install
          bundle exec fastlane run_tests --env tests
    publishers:
      - html-publisher:
          name: "Unit Test Results"
          dir: "fastlane/output/unit_test_reports"
          files: "report.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - html-publisher:
          name: "Code Coverage Results"
          dir: "fastlane/output/code_coverage_reports"
          files: "index.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - email:
          recipients: '{email-recipients}'

- job-template:
    name: '{name}-beta'
    node: mac
    logrotate:
      numToKeep: 5
    description: |
      {description-intro}

      Runs when pull requests are submitted to develop branch. If building and testing is successful the app will be deployed to crashlytics for beta testing.
    parameters: '{obj:beta_parameters}'
    properties:
      - github:
          url: https://github.com/CruGlobal/{name}/
      - inject:
          properties-content:
              !include-raw: .env.mobile-jobs
    scm:
      - git:
          branches:
            - '$GIT_ORIGIN_BRANCH'
          url: git@github.com:CruGlobal/{name}.git
          credentials-id: '66c3b5a3-0f7c-4e22-97b2-a78fb5a73658'
          refspec: '+refs/heads/develop:refs/remotes/origin/develop'
          wipe-workspace: false
          skip-tag: true
          prune: true
          excluded-users:
            - cru-jenkins-mobile
            - cru-jenkins2
            - cru-jenkins
    triggers:
      - github
    wrappers:
      - build-name:
          name: '$GIT_ORIGIN_BRANCH #$BUILD_NUMBER'
      - ssh-agent-credentials:
          users:
            - '66c3b5a3-0f7c-4e22-97b2-a78fb5a73658'
      - ansicolor:
          colormap: xterm
    builders:
      - shell:
          !include-raw: fastlane-modification-check.sh
      - shell: |
          bundle install
          bundle exec fastlane beta --env beta
    publishers:
      - html-publisher:
          name: "Unit Test Results"
          dir: "fastlane/output/unit_test_reports"
          files: "report.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - html-publisher:
          name: "Code Coverage Results"
          dir: "fastlane/output/code_coverage_reports"
          files: "index.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - email:
          recipients: '{email-recipients}'

- job-template:
    name: '{name}-production'
    node: mac
    logrotate:
      numToKeep: -1
    description: |
      {description-intro}

      Runs when pull requests are submitted to master branch. If building and testing is successful the app will be deployed to the appstore/playstore for you to review prior to submitting the app.
    parameters: '{obj:production_parameters}'
    properties:
      - github:
          url: https://github.com/CruGlobal/{name}/
      - inject:
          properties-content:
              !include-raw: .env.mobile-jobs
    scm:
      - git:
          branches:
            - '$GIT_ORIGIN_BRANCH'
          url: git@github.com:CruGlobal/{name}.git
          credentials-id: '66c3b5a3-0f7c-4e22-97b2-a78fb5a73658'
          refspec: '+refs/heads/master:refs/remotes/origin/master'
          wipe-workspace: false
          skip-tag: true
          prune: true
          excluded-users:
            - cru-jenkins-mobile
            - cru-jenkins2
            - cru-jenkins
    triggers:
      - github
    wrappers:
      - build-name:
          name: '$GIT_ORIGIN_BRANCH #$BUILD_NUMBER'
      - ssh-agent-credentials:
          users:
            - '66c3b5a3-0f7c-4e22-97b2-a78fb5a73658'
      - ansicolor:
          colormap: xterm
    builders:
      - shell:
          !include-raw: fastlane-modification-check.sh
      - shell: |
          bundle install
          bundle exec fastlane production --env production
    publishers:
      - html-publisher:
          name: "Screen Shots"
          dir: "fastlane/output/screenshots"
          files: "screenshots.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - html-publisher:
          name: "Unit Test Results"
          dir: "fastlane/output/unit_test_reports"
          files: "report.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - html-publisher:
          name: "Code Coverage Results"
          dir: "fastlane/output/code_coverage_reports"
          files: "index.html"
          keep-all: true
          allow-missing: true
          link-to-last-build: false
      - email:
          recipients: '{email-recipients}'