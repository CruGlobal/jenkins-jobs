- defaults:
    name: global
    email-recipients: $DEFAULT_RECIPIENTS
    cluster: ''
    deploy-staging-job: deploy-ecs
    deploy-production-job: deploy-ecs

- project:
    name: autonag
    description-intro: Builds, tests, & deploys the autonag docker image.
    email-recipients: spencer.oberstadt@cru.org
    jobs:
      - 'rails-template'

- project:
    name: campaign-forms
    description-intro: Builds, tests, & deploys the campaign-forms docker image.
    email-recipients: brian.zoetewey@cru.org
    jobs:
      - 'rails-template'

- project:
    name: cap
    description-intro: Builds, tests, & deploys the combined application (apply.cru.org) docker image.
    email-recipients: andrewroth@gmail.com
    jobs:
      - 'rails-template'

- project:
    name: college-bound
    description-intro: Builds and deploys the college-bound image.
    email-recipients: spencer.oberstadt@cru.org
    jobs:
      - 'rails-template'

- project:
    name: cruprojects
    description-intro: Builds, tests, & deploys the cruprojects.com docker image.
    email-recipients: spencer.oberstadt@cru.org
    jobs:
      - 'rails-template'

- project:
    name: everystudent-web
    description-intro: Builds, tests, & deploys the everystudent.com docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'php-template'

- project:
    name: fundable
    description-intro: Builds, tests, & deploys the Fundable docker image.
    email-recipients: tataihono.nikora@cru.org
    jobs:
      - 'rails-template'

- project:
    name: global-profile-api
    description-intro: Builds, tests, & deploys the global-profile-api docker image.
    email-recipients: brian.zoetewey@ccci.org
    jobs:
      - 'rails-template'

- project:
    name: global360
    description-intro: Builds, tests, & deploys the global360 docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: global-profile-php
    description-intro: Builds, tests, & deploys the global-profile-php docker image.
    email-recipients: brian.zoetewey@ccci.org
    jobs:
      - 'php-template'

- project:
    name: wordpress
    description-intro: Builds, tests, & deploys the wordpress docker image.
    email-recipients: brian.zoetewey@ccci.org, josh.starcher@cru.org, david.sudarma@cru.org, john.plastow@cru.org
    jobs:
      - 'php-template'

- project:
    name: global_registry
    description-intro: Builds, tests, & deploys the Global Registry docker image.
    jobs:
      - 'rails-template'

- project:
    name: gma-app-php
    description-intro: Builds, tests, & deploys the gma-app-php docker image.
    email-recipients: brian.zoetewey@ccci.org
    jobs:
      - 'php-template'

- project:
    name: mobile-content-api
    description-intro: Builds, tests, & deploys the Mobile Content API docker image.
    email-recipients: daniel.goers@cru.org
    jobs:
      - 'rails-template'

- project:
    name: infobase
    description-intro: Builds, tests, & deploys the Infobase docker image.
    email-recipients: josh.starcher@cru.org, justin.sabelko@cru.org
    jobs:
      - 'rails-template'

- project:
    name: maintenance
    description-intro: Builds, tests, & deploys the maintenance management docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: measurements-api
    description-intro: Builds, tests, & deploys the Measurements API docker image.
    email-recipients: brian.zoetewey@ccci.org, spencer.oberstadt@cru.org
    jobs:
      - 'rails-template'

- project:
    name: ministry_view_api
    description-intro: Builds, tests, & deploys the MinistryView API docker image.
    email-recipients: brian.zoetewey@ccci.org
    jobs:
      - 'rails-template'

- project:
    name: missionhub
    description-intro: Builds, tests, & deploys the MissionHub docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: missionhub-api
    description-intro: Builds, tests, & deploys the MissionHub API docker image.
    jobs:
      - 'rails-template'

- project:
    name: mpd-dashboard-api
    description-intro: Builds, tests, & deploys the mpd-dashboard-api docker image.
    email-recipients: josh.starcher@cru.org, brian.zoetewey@ccci.org, adam.meyer@cru.org
    jobs:
      - 'rails-template'

- project:
    name: mpd-dashboard-app
    description-intro: Builds, tests, & deploys the mpd-dashboard-app docker image.
    email-recipients: brian.zoetewey@ccci.org
    jobs:
      - 'php-template'

- project:
    name: crustore
    description-intro: Builds, tests, & deploys the crustore docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'php-template'

- project:
    name: mpd_tool
    description-intro: Builds, tests, & deploys the mpd tool docker image.
    email-recipients: josh.starcher@cru.org, justin.sabelko@cru.org
    jobs:
      - 'rails-template'

- project:
    name: mpdx
    description-intro: Builds, tests, & deploys the MPDX docker image.
    email-recipients: josh.starcher@cru.org, spencer.oberstadt@cru.org
    jobs:
      - 'rails-template'

- project:
    name: mpdx_api
    description-intro: Builds, tests, & deploys the MPDX API docker image.
    email-recipients: josh.starcher@cru.org, dave.raffensperger@cru.org, spencer.oberstadt@cru.org, tataihono.nikora@cru.org
    jobs:
      - 'rails-template'

- project:
    name: ministry_locator
    description-intro: Builds, tests, & deploys the ministry locator docker image.
    email-recipients: josh.starcher@cru.org, spencer.oberstadt@cru.org
    jobs:
      - 'rails-template'

- project:
    name: ministry_mapper
    description-intro: Builds, tests, & deploys the ministry mapper docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: oauth_server
    description-intro: Builds, tests, & deploys the oauth_server docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: pr
    description-intro: Builds, tests, & deploys the Panorama docker image.
    email-recipients: josh.starcher@cru.org, justin.sabelko@cru.org
    jobs:
      - 'rails-template'

- project:
    name: rails-cas-auth-api
    description-intro: Builds, tests, & deploys the Rails CAS Authenticated API docker image.
    email-recipients: brian.zoetewey@ccci.org, josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: rails-infrastructure-canary
    description-intro: Builds a simplistic rails app, which only serves to prove out the ci & deployment infrastructure.
    cluster: lab
    jobs:
      - 'rails-template'

- project:
    name: rideshare
    description-intro: Builds, tests, & deploys the rideshare docker image.
    jobs:
      - 'rails-template'

- project:
    name: staff-conf-onsite
    description-intro: Builds, tests, & deploys the staff conference onsite docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'
      
- project:
    name: staff-conf-onsite17
    description-intro: Builds, tests, & deploys the staff conference onsite docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: staffportal_api
    description-intro: Builds, tests, & deploys the Staff Portal docker image.
    email-recipients: tataihono.nikora@cru.org, kewei.jiang@cru.org
    jobs:
      - 'rails-template'

- project:
    name: summer_missions
    description-intro: Builds, tests, & deploys the Summer Missions docker image.
    email-recipients: josh.starcher@cru.org, justin.sabelko@cru.org, mark.knutsen@cru.org
    jobs:
      - 'rails-template'

- project:
    name: voke_api
    description-intro: Builds, tests, & deploys the Voke API docker image.
    jobs:
      - 'rails-template'

- project:
    name: data_transfers
    description-intro: Builds, tests, & deploys the data_transfers docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: cortex_gateway
    description-intro: Builds, tests, & deploys the cortex_gateway docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'rails-template'

- project:
    name: watchthinkchat
    description-intro: Builds, tests, & deploys the WatchThinkChat docker image.
    jobs:
      - 'rails-template'

- project:
    name: escomm
    description-intro: Builds, tests, & deploys the Personalized EveryStudent Series docker image
    email-recipients: asaph.yuan@cru.org, david.raffensperger@cru.org
    jobs:
      - 'rails-template'

- project:
    name: voke_admin
    description-intro: Builds, tests, & deploys the Voke admin docker image.
    jobs:
      - 'react-template'

- project:
    name: ararat
    description-intro: Builds, tests, & deploys the Ararat docker image.
    email-recipients: josh.starcher@cru.org, sheldon@ballistiq.com
    jobs:
      - 'rails-template'

- project:
    name: redirector
    description-intro: Builds, tests, & deploys the redirector docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: cruorg_proxy
    description-intro: Builds, tests, & deploys the cruorg_proxy docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: auto-ssl-redirector
    description-intro: Builds, tests, & deploys the auto-ssl-redirector docker image.
    email-recipients: brian.zoetewey@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: model_contracts
    description-intro: Builds, tests, & deploys the Model Contracts docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'php-template'

- project:
    name: snowplow-collector
    description-intro: Builds, tests, & deploys the snowplow collector docker image.
    email-recipients: josh.starcher@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: snowplow-s3loader
    description-intro: Builds, tests, & deploys the snowplow s3 Loader docker image.
    email-recipients: josh.starcher@cru.org, luis.rodriguez@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: snowplow-dataflow
    description-intro: Builds, tests, & deploys the snowplow dataflow docker image.
    email-recipients: josh.starcher@cru.org, luis.rodriguez@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: snowplow-enrich
    description-intro: Builds, tests, & deploys the snowplow enrich docker image.
    email-recipients: josh.starcher@cru.org, luis.rodriguez@cru.org
    jobs:
      - 'openresty-template'

- project:
    name: docker-airflow
    description-intro: Builds, tests, & deploys the apache airflow docker image.
    email-recipients: josh.starcher@cru.org, luis.rodriguez@cru.org
    deploy-production-job: docker-airflow-deploy
    jobs:
      - 'openresty-template'

- job-group:
    name: 'php-template'
    jobs:
        - '{name}':
            build-script: php_deploy.sh

- job-group:
    name: 'openresty-template'
    jobs:
        - '{name}':
            build-script: openresty_deploy.sh

- job-group:
    name: 'rails-template'
    jobs:
        - '{name}':
            build-script: rails_deploy.sh

- job-group:
    name: 'react-template'
    jobs:
        - '{name}':
            build-script: react_deploy.sh



- job-template:
    name: '{name}'
    description: |
      {description-intro}

      Builds on the 'staging' branch automatically trigger a deployment
      of that image to the staging environment.

      From 7am to 1pm on weekdays, builds on the 'master' branch automatically trigger a
      deployment of that image to the production environment.

      Only the master and staging branches are automatically built.
      Other branches may be manually built via `Build with Parameters`.

      Historic builds can be manually deployed to either staging or production,
      by running the 'Deploy to Production' or the 'Deploy to Staging' build promotions.

    parameters:
      - git:
          name: BRANCH_SPECIFIER
          description: |
            If specified, jenkins will use this git branch to build.
            If not, jenkins will pick a branch (between 'master' and 'staging')
            that seems most likely to be the one you want built.
            This is usually either the branch that has commits in it that jenkins hasn't 'seen' yet,
            or, if there are none of those, the most recently-built branch.
          type: branch
          sort: none
          default: :origin/(master|staging)

    properties:
      - github:
          url: https://github.com/CruGlobal/{name}/
      - promoted-build:
            names:
              - Deploy to Staging
              - Deploy to Production
      - inject:
          properties-content: |
            LD_LIBRARY_PATH=/opt/oracle/instantclient_11_2
    node: linux
    scm:
      - git:
          branches:
          - $BRANCH_SPECIFIER
          url: git@github.com:CruGlobal/{name}.git
          wipe-workspace: false
          skip-tag: true
          prune: true
    triggers:
      - github

    builders:
      - shell: 'PROJECT_NAME=$JOB_NAME DEPLOY_ECS=false ~/bin/{build-script}'

    publishers:
      - conditional-publisher:
          - condition-kind: strings-match
            condition-string1: "$GIT_BRANCH"
            condition-string2: "origin/staging"
            action:
              - trigger-parameterized-builds:
                  - project: '{deploy-staging-job}'
                    predefined-parameters: |
                      IMAGE_TAG=staging-$BUILD_NUMBER
                      PROJECT_NAME=$JOB_NAME
                      GIT_COMMIT=$GIT_COMMIT
                      GIT_BRANCH=$GIT_BRANCH
                      ENVIRONMENT=staging
                      CLUSTER={cluster}
                    condition: SUCCESS
          - condition-kind: and
            condition-operands:
              - &is-master
                condition-kind: strings-match
                condition-string1: "$GIT_BRANCH"
                condition-string2: "origin/master"
              - &is-weekday
                condition-kind: day-of-week
                day-selector: weekday
              - &is-within-work-hours
                condition-kind: time
                earliest-hour: "7"
                earliest-min: "0"
                latest-hour: "13"
                latest-min: "0"
            action:
              - trigger-parameterized-builds:
                  - project: '{deploy-production-job}'
                    predefined-parameters: |
                      IMAGE_TAG=production-$BUILD_NUMBER
                      PROJECT_NAME=$JOB_NAME
                      GIT_COMMIT=$GIT_COMMIT
                      GIT_BRANCH=$GIT_BRANCH
                      ENVIRONMENT=production
                      CLUSTER={cluster}
                    condition: SUCCESS
          - condition-kind: and
            condition-operands:
              - <<: *is-master
              - condition-kind: not
                condition-operand:
                  condition-kind: and
                  condition-operands:
                    - <<: *is-weekday
                    - <<: *is-within-work-hours
            action:
              - email-ext:
                  recipients: '{email-recipients}'
                  failure: false
                  success: true
                  send-to:
                    -  recipients
                    -  requester
                    -  developers
                  body: |
                    Note: $JOB_NAME #$BUILD_NUMBER was built, but was not automatically deployed to production since it is now after-hours.
                    To manually deploy, run the 'Deploy to Production' promotion here:
                    ${{BUILD_URL}}promotion/

                    $DEFAULT_CONTENT
                  presend-script: $DEFAULT_PRESEND_SCRIPT

    wrappers:
      - build-name:
          name: '$GIT_BRANCH #$BUILD_NUMBER'
      - rbenv:
          ruby-version: 2.3.1
