- project:
    name: godtools-api-prod
    jobs:
      - '{name}'

- project:
    name: godtools-api-stage
    jobs:
      - '{name}'

# freestyle template for "docker-less" java apps
- job-template:
    name: '{name}'
    jdk: JDK7
    description: |
      This plan deploys the latest revision of the GodTools API to AWS.

      The plan will run the unit and integration test suite against the unittest database

      It requires as parameters:
      - the IP address of the target server
      - the management password for the wildfly 'deployer' user on the target server

    properties:
      - github:
          url: http://github.com/CruGlobal/godtools-api/

    parameters:
      - choice:
          name: targetEnvironment
          choices:
            - stage
            - prod
          description: "Choose either 'stage' or 'prod' for this deployment."
      - string:
          name: targetServerIP
          description: "The IP Address to deploy new war archive to."
      - string:
          name: deployerPassword
      - bool:
          name: databaseMigration
          defautl: false
          description: "Check this box to run the latest database migration(s) against the target environment (specified above).  Any new migrations above the previous version will be run."

    node: linux
    scm:
      - git:
          url: git@github.com:CruGlobal/godtools-api.git
          branches:
            - origin/master
          wipe-workspace: false
          skip-tag: true
          prune: true

    builders:
          - maven-builder:
              name: maven v3.3.9
              pom: pom.xml
              goals: clean compile
          - maven-builder:
              name: maven v3.3.9
              pom: pom.xml
              goals: 'wildfly:deploy -e -DskipTests -Ddeployments.targetServerIP=${{targetServerIP}} -Dmigrations.execute=${{databaseMigration}} -Dmigrations.environment=${{targetEnvironment}} -Denv.deployerPassword=${{deployerPassword}}'

    publishers:
      - hipchat:
          token: <auth-token-goes-here>
          rooms:
            - Deploy Activity
          notify-success: true
          notify-failure: true
